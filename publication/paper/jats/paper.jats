<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>ProbINet: Bridging Usability Gaps in Probabilistic
Network Analysis</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Baptista</surname>
<given-names>Diego</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Bacco</surname>
<given-names>Caterina De</given-names>
</name>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Contisciani</surname>
<given-names>Martina</given-names>
</name>
<xref ref-type="aff" rid="aff-3"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Claude-Passy</surname>
<given-names>Jean</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Max Planck Institute for Intelligent Systems, Tübingen,
Germany.</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Delft University of Technology, Delft,
Netherlands.</institution>
</institution-wrap>
</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Central European University, Vienna, Austria.</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-01-22">
<day>22</day>
<month>1</month>
<year>2025</year>
</pub-date>
<volume>¿VOL?</volume>
<issue>¿ISSUE?</issue>
<fpage>¿PAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>1970</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>network science</kwd>
<kwd>probabilistic modeling</kwd>
<kwd>community detection</kwd>
<kwd>anomaly detection</kwd>
<kwd>synthetic data generation</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p><bold>Prob</bold>abilistic <bold>I</bold>nference on
  <bold>Net</bold>works (ProbINet) is a Python package that provides a
  unified framework to perform probabilistic inference on networks,
  enabling researchers and practitioners to analyze and model complex
  network data. The package integrates code implementations from several
  scientific publications, supporting tasks such as community detection,
  anomaly detection, and synthetic data generation using latent variable
  models. It is designed to simplify the use of cutting-edge techniques
  in network analysis by providing a cohesive and user-friendly
  interface. The package includes efficient implementations of
  probabilistic algorithms, tools for model evaluation, and
  visualizations to support data exploration.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Network analysis plays a central role in fields such as social
  sciences, biology, and fraud detection, where understanding
  relationships between entities is critical. Probabilistic generative
  models
  (<xref alt="Contisciani et al., 2020" rid="ref-contisciani2020community" ref-type="bibr">Contisciani
  et al., 2020</xref>,
  <xref alt="2022" rid="ref-contisciani2022community" ref-type="bibr">2022</xref>;
  <xref alt="Safdari et al., 2021" rid="ref-safdari2021generative" ref-type="bibr">Safdari
  et al., 2021</xref>,
  <xref alt="2022" rid="ref-safdari2022reciprocity" ref-type="bibr">2022</xref>;
  <xref alt="Safdari &amp; De Bacco, 2022" rid="ref-safdari2022anomaly" ref-type="bibr">Safdari
  &amp; De Bacco, 2022</xref>) have emerged as powerful tools for
  discovering hidden patterns in networks, detecting communities,
  identifying anomalies, and generating realistic synthetic data.
  Despite their potential, the practical use of these models remains
  challenging due to a lack of integration and accessibility. These
  methods are often implemented in fragmented codebases spread across
  individual publications, creating barriers for researchers and
  practitioners who wish to compare models, reproduce results, or apply
  them to their own data. ProbINet addresses this critical gap by
  consolidating recent approaches into a single, unified framework. It
  provides accessible tools for network analysis tasks, allowing users
  to explore advanced techniques without the overhead of navigating
  multiple repositories or inconsistent documentation. By integrating
  multiple models and workflows, this package promotes reproducibility,
  simplifies adoption, and enhances usability across disciplines.</p>
</sec>
<sec id="mathematical-background">
  <title>Mathematical background</title>
  <p>The mathematical foundation of our package builds on recent
  developments in probabilistic generative models for networks. These
  models assume that observed network structures arise from underlying
  latent variables and allow for flexible probabilistic modeling of
  joint distributions between data and latent variables. By relaxing
  several restrictive assumptions commonly made in earlier models, our
  framework supports more expressive methods to uncover hidden
  structures (e.g., communities and anomalies), model uncertainty, and
  generate realistic synthetic network data.</p>
</sec>
<sec id="main-features">
  <title>Main features</title>
  <p>ProbINet offers a versatile and feature-rich framework to perform
  inference on networks using probabilistic generative models. Its
  design focuses on integrating diverse models, facilitating parameter
  selection, providing tools for evaluation and visualization, and
  enabling synthetic data generation. Key features include:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>Diverse and Unified Network Models</bold>: The package
      integrates a wide range of probabilistic generative models
      tailored for various network data types and analytical goals. The
      following table summarizes the models currently implemented in
      ProbINet:</p>
    </list-item>
  </list>
  <table-wrap>
    <table>
      <colgroup>
        <col width="11%" />
        <col width="64%" />
        <col width="25%" />
      </colgroup>
      <thead>
        <tr>
          <th><bold>Name</bold></th>
          <th><bold>Description</bold></th>
          <th><bold>Network Properties</bold></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><bold>MTCOV</bold></td>
          <td>Extracts overlapping communities in multilayer networks
          using topology and node attributes [1].</td>
          <td>Weighted, Multilayer, Attributes</td>
        </tr>
        <tr>
          <td><bold>CRep</bold></td>
          <td>Models reciprocity in directed networks [2].</td>
          <td>Directed, Reciprocity</td>
        </tr>
        <tr>
          <td><bold>JointCRep</bold></td>
          <td>Captures community structure and reciprocity with a joint
          edge distribution [3].</td>
          <td>Directed, Weighted, Reciprocity</td>
        </tr>
        <tr>
          <td><bold>DynCRep</bold></td>
          <td>Extends CRep for dynamic networks [4].</td>
          <td>Dynamic, Directed, Weighted</td>
        </tr>
        <tr>
          <td><bold>ACD</bold></td>
          <td>Identifies anomalous edges by assigning community
          memberships to nodes and anomaly parameters to edges [5].</td>
          <td>Directed, Attributes, Anomalies</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <list list-type="bullet">
    <list-item>
      <p><bold>Synthetic Network Generation</bold>: After fitting models
      to real data, ProbINet enables users to generate synthetic
      networks that closely resemble the characteristics of the real
      ones. This feature is particularly useful for conducting further
      analyses on replicated networks, such as testing hypotheses,
      training algorithms, or exploring network variability.</p>
    </list-item>
    <list-item>
      <p><bold>Simplified Parameter Selection and Model
      Evaluation</bold>: All models rely on key parameters, such as the
      number of communities or the desired network structure. To
      optimize these parameters, ProbINet provides a dedicated module
      for cross-validation. This module seamlessly evaluates model
      performance across a range of parameter configurations, outputting
      results as a clear and easy-to-interpret dataframe.</p>
    </list-item>
    <list-item>
      <p><bold>Rich Set of Metrics for Analysis</bold>: ProbINet
      includes an extensive collection of metrics to analyze algorithm
      outputs. These include classical metrics like F1 scores and
      Jaccard index for comparing detected and ground-truth community
      partitions, as well as advanced metrics for evaluating link
      prediction quality, offering users the tools needed for a deeper,
      comprehensive analysis.</p>
    </list-item>
    <list-item>
      <p><bold>Powerful Visualization Tools</bold>: ProbINet includes
      built-in visualization functions to make the results more
      interpretable. Users can plot soft and hard community memberships,
      adjacency matrices, and performance metrics like precision and
      recall.</p>
    </list-item>
    <list-item>
      <p><bold>User-Friendly Command-Line Interface</bold>: ProbINet
      includes a robust and intuitive command-line interface, enabling
      users to specify the desired model and provide the path to their
      data. The interface then fits the selected model to the data and
      outputs the inferred parameters, making the package accessible
      even to those with minimal Python experience.</p>
    </list-item>
    <list-item>
      <p><bold>Modular and Extensible Codebase</bold>: The package is
      designed with modularity in mind, enabling users to extend its
      functionality with minimal effort. New models can be easily
      integrated as long as they follow similar modeling principles,
      ensuring the framework remains adaptable.</p>
    </list-item>
  </list>
  <p>These features are further illustrated in the <bold>Usage</bold>
  section below with practical examples, showcasing how to apply the
  package’s capabilities to real-world network data.</p>
</sec>
<sec id="usage">
  <title>Usage</title>
  <sec id="installation">
    <title>Installation</title>
    <p>The package can be installed using Python’s package manager
    <monospace>pip</monospace> or directly from the source repository.
    Detailed installation instructions are provided in the documentation
    available at <bold>https://mpi-is.github.io/probinet/</bold>.</p>
  </sec>
  <sec id="example-practical-use-of-probinet">
    <title>Example: Practical Use of ProbINet</title>
    <p>To illustrate the practical use of ProbINet, let’s consider the
    scenario where you have a dataset representing a network with
    distinct structural patterns, similar to the one visualized in the
    figure below:</p>
    <fig>
      <caption><p>Soft Membership Visualization</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="soft_membership_JointCRep.png" />
    </fig>
    <p>This network contains nodes that exhibit a variety of community
    memberships based on their relationships. Using ProbINet’s
    algorithms, such as <monospace>JointCRep</monospace>, you can
    analyze this network to infer underlying latent variables. These
    variables can help identify patterns such as outgoing or incoming
    community memberships that potentially explain the network’s
    structure.</p>
    <p>In this example, ProbINet enables you to:</p>
    <list list-type="order">
      <list-item>
        <p>Load your network data in the form of an edge list.</p>
      </list-item>
      <list-item>
        <p>Select the desired algorithm, such as
        <monospace>JointCRep</monospace>, suitable for your type of
        network (e.g., directed, undirected, multilayer, or
        dynamic).</p>
      </list-item>
      <list-item>
        <p>Fit the model to your data and obtain the inferred latent
        variables.</p>
      </list-item>
      <list-item>
        <p>Use the inferred parameters to uncover patterns, such as soft
        community memberships. These memberships provide insights into
        how nodes interact with different communities, both in terms of
        outgoing and incoming connections.</p>
      </list-item>
    </list>
    <p>ProbINet also provides built-in tools for visualizing results, as
    shown in the figure, where the soft community memberships of nodes
    are visually represented. This output aids in interpreting the
    network structure and identifying meaningful communities or
    patterns.</p>
  </sec>
</sec>
<sec id="running-times-of-algorithms">
  <title>Running Times of Algorithms</title>
  <p>The following table provides an overview of the running times for
  the algorithms implemented in ProbINet. The values <bold>N</bold> and
  <bold>E</bold> represent the number of nodes and edges in the network,
  respectively. Numbers of edges given as ranges indicate the variation
  across different layers or time steps. The column <bold>L/T</bold>
  indicates whether the number of layer or time steps is considered, and
  how many are used. The parameter <bold>K</bold> represents the number
  of communities. The networks used are those shown in the corresponding
  tutorials.</p>
  <table-wrap>
    <table>
      <colgroup>
        <col width="23%" />
        <col width="16%" />
        <col width="9%" />
        <col width="14%" />
        <col width="11%" />
        <col width="9%" />
        <col width="18%" />
      </colgroup>
      <thead>
        <tr>
          <th><bold>Algorithm</bold></th>
          <th><bold>Network</bold></th>
          <th><bold>N</bold></th>
          <th><bold>E</bold></th>
          <th><bold>L/T</bold></th>
          <th><bold>K</bold></th>
          <th><bold>Time (s)</bold></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><bold>CRep</bold></td>
          <td>Synthetic</td>
          <td>600</td>
          <td>5217</td>
          <td>1</td>
          <td>3</td>
          <td>1.43</td>
        </tr>
        <tr>
          <td><bold>JointCRep</bold></td>
          <td>Real</td>
          <td>31</td>
          <td>100</td>
          <td>1</td>
          <td>4</td>
          <td>0.23</td>
        </tr>
        <tr>
          <td><bold>DynCRep</bold></td>
          <td>Synthetic</td>
          <td>300</td>
          <td>1479-1859</td>
          <td>5</td>
          <td>3</td>
          <td>22.1</td>
        </tr>
        <tr>
          <td><bold>MTCOV</bold></td>
          <td>Synthetic</td>
          <td>300</td>
          <td>724-1340</td>
          <td>4</td>
          <td>2</td>
          <td>1.13</td>
        </tr>
        <tr>
          <td><bold>ACD</bold></td>
          <td>Synthetic</td>
          <td>300</td>
          <td>2698</td>
          <td>1</td>
          <td>3</td>
          <td>14.98</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <p>Notice that this table is intended to provide a general overview of
  the running times for the algorithms on the specific networks used in
  the tutorials. A more detailed analysis of the running times should
  still be performed on the user’s specific data.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We extend our gratitude to the contributors of the seminal
  publications whose work is integrated into this package. We also thank
  Kibidi Neocosmos, Valkyrie Felso, and Kathy Su for their valuable
  feedback and suggestions during the development of this package.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-contisciani2020community">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Contisciani</surname><given-names>Martina</given-names></name>
        <name><surname>Power</surname><given-names>Eleanor A</given-names></name>
        <name><surname>De Bacco</surname><given-names>Caterina</given-names></name>
      </person-group>
      <article-title>Community detection with node attributes in multilayer networks</article-title>
      <source>Scientific reports</source>
      <publisher-name>Nature Publishing Group UK London</publisher-name>
      <year iso-8601-date="2020">2020</year>
      <volume>10</volume>
      <issue>1</issue>
      <fpage>15736</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-safdari2021generative">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Safdari</surname><given-names>Hadiseh</given-names></name>
        <name><surname>Contisciani</surname><given-names>Martina</given-names></name>
        <name><surname>De Bacco</surname><given-names>Caterina</given-names></name>
      </person-group>
      <article-title>Generative model for reciprocity and community detection in networks</article-title>
      <source>Physical Review Research</source>
      <publisher-name>APS</publisher-name>
      <year iso-8601-date="2021">2021</year>
      <volume>3</volume>
      <issue>2</issue>
      <fpage>023209</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-contisciani2022community">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Contisciani</surname><given-names>Martina</given-names></name>
        <name><surname>Safdari</surname><given-names>Hadiseh</given-names></name>
        <name><surname>De Bacco</surname><given-names>Caterina</given-names></name>
      </person-group>
      <article-title>Community detection and reciprocity in networks by jointly modelling pairs of edges</article-title>
      <source>Journal of Complex Networks</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>10</volume>
      <issue>4</issue>
      <fpage>cnac034</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-safdari2022reciprocity">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Safdari</surname><given-names>Hadiseh</given-names></name>
        <name><surname>Contisciani</surname><given-names>Martina</given-names></name>
        <name><surname>De Bacco</surname><given-names>Caterina</given-names></name>
      </person-group>
      <article-title>Reciprocity, community detection, and link prediction in dynamic networks</article-title>
      <source>Journal of Physics: Complexity</source>
      <publisher-name>IOP Publishing</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>3</volume>
      <issue>1</issue>
      <fpage>015010</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-safdari2022anomaly">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Safdari</surname><given-names>Hadiseh</given-names></name>
        <name><surname>De Bacco</surname><given-names>Caterina</given-names></name>
      </person-group>
      <article-title>Anomaly detection and community detection in networks</article-title>
      <source>Journal of Big Data</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2022">2022</year>
      <volume>9</volume>
      <issue>1</issue>
      <fpage>122</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
